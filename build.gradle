plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.6.5'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
    id 'org.jetbrains.changelog' version '1.1.1'
}

apply plugin: 'org.jetbrains.changelog'

group 'ws.logv'
version '1.0-SNAPSHOT'

def release = false
def releaseVersion = ""

if (project.hasProperty("release-version")) {
    releaseVersion = (String) project.property("release-version")
    version = releaseVersion.substring(1)
    release = true
}

repositories {
    mavenCentral()
    maven {
        url = 'https://projects.itemis.de/nexus/content/repositories/mbeddr'
    }
}

def mpsVersion = "2020.2.+"

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    compileOnly "com.jetbrains:mps-openapi:$mpsVersion"
    compileOnly "com.jetbrains:mps-platform:$mpsVersion"
    compileOnly "com.jetbrains:mps-workbench:$mpsVersion"
    implementation "com.ibm.icu:icu4j:68.2"
    implementation "org.apache.commons:commons-compress:1.2"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2020.2'
    type "MPS"
    plugins 'jetbrains.mps.core:2020.2'
    pluginsRepo { marketplace() }
}

runPluginVerifier {
    ideVersions = ["MPS-2020.2.3"]
}

compileKotlin {
    kotlinOptions.apiVersion = "1.3"
    kotlinOptions.languageVersion = "1.3"
    kotlinOptions.jvmTarget = "11"
}

changelog {
    version = project.version
    path = "${project.projectDir}/CHANGELOG.md"
    header = { "[$version] - ${ExtensionsKt.date()}" }
    keepUnreleasedSection = true
    unreleasedTerm = "[Next]"
    groups = ["Added", "Changed", "Deprecated", "Removed", "Fixed"]
}


patchPluginXml {
    changeNotes({ changelog.getUnreleased().toHTML() })
}
test {
    useJUnitPlatform()
    environment("TESTPROJECT_LOCATION", "$projectDir/testproject")
}

// a little workaround to make github action releases easier
if (release) {
    tasks.getByName("buildPlugin").archiveFileName = "Lochkarte-${releaseVersion}.zip"
}